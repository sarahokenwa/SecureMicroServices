// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Infrastructure.Data;

#nullable disable

namespace Movies.Infrastructure.Migrations
{
    [DbContext(typeof(DataEntities))]
    [Migration("20240421025001_Seeddatabase")]
    partial class Seeddatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Movies.Domain.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9459), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Drama",
                            ImageUrl = "images/src",
                            Name = "The Shawshank Redemption",
                            Owner = "alice",
                            Rating = "9.3",
                            ReleaseDate = new DateTime(1994, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9498), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Crime",
                            ImageUrl = "images/src",
                            Name = "The Godfather",
                            Owner = "alice",
                            Rating = "9.2",
                            ReleaseDate = new DateTime(1972, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9503), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Action",
                            ImageUrl = "images/src",
                            Name = "The Dark Knight",
                            Owner = "bob",
                            Rating = "9.1",
                            ReleaseDate = new DateTime(2008, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9507), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Crime",
                            ImageUrl = "images/src",
                            Name = "12 Angry Men",
                            Owner = "bob",
                            Rating = "8.9",
                            ReleaseDate = new DateTime(1957, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9511), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Biography",
                            ImageUrl = "images/src",
                            Name = "Schindler's List",
                            Owner = "alice",
                            Rating = "8.9",
                            ReleaseDate = new DateTime(1993, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9514), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Drama",
                            ImageUrl = "images/src",
                            Name = "Pulp Fiction",
                            Owner = "alice",
                            Rating = "8.9",
                            ReleaseDate = new DateTime(1994, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9518), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Drama",
                            ImageUrl = "images/src",
                            Name = "Fight Club",
                            Owner = "bob",
                            Rating = "8.8",
                            ReleaseDate = new DateTime(1999, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTimeOffset(new DateTime(2024, 4, 21, 3, 50, 0, 834, DateTimeKind.Unspecified).AddTicks(9521), new TimeSpan(0, 1, 0, 0, 0)),
                            Genre = "Romance",
                            ImageUrl = "images/src",
                            Name = "Forrest Gump",
                            Owner = "bob",
                            Rating = "8.8",
                            ReleaseDate = new DateTime(1994, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
